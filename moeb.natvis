<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010"> 
  <Type Name="Moe::InString">
      <DisplayString>{{ {m_pChz,s} }}</DisplayString>
     <Expand>
       <Item Name="m_pChz">m_pChz</Item>
      </Expand>
  </Type>
  <Type Name="BigInt">
      <DisplayString Condition="m_fIsNegative == true">{{ -{m_nAbs} }}</DisplayString>
      <DisplayString Condition="m_fIsNegative == false">{{ {m_nAbs} }}</DisplayString>
  </Type>
  <Type Name="TypeInfoNumeric">
      <DisplayString Condition="m_numk == 0">{{ f{m_cBit} }}</DisplayString>
      <DisplayString Condition="m_numk == 1">{{ u{m_cBit} }}</DisplayString>
      <DisplayString Condition="m_numk == 2">{{ s{m_cBit} }}</DisplayString>
  </Type>
  <Type Name="TypeInfoPointer">
      <DisplayString>{{ pTinPointedTo={m_pTin} }}</DisplayString>
  </Type>
  <Type Name="TypeInfoProcedure">
      <DisplayString Condition="m_istrDesc.m_pChz==nullptr||m_istrDesc.m_pChz[0]==0">{{ proc={m_istrName.m_pChz,s} }}</DisplayString>
      <DisplayString Condition="m_istrDesc.m_pChz!=nullptr&amp;&amp;m_istrDesc.m_pChz[0]!=0">{{ proc={m_istrDebug.m_pChz,s} }}</DisplayString>
  </Type>
  <Type Name="TypeInfoStruct">
      <DisplayString Condition="m_istrDesc.m_pChz==nullptr||m_istrDesc.m_pChz[0]==0">{{ struct={m_istrName.m_pChz,s} cField={m_aryTypemembField.m_c} }}</DisplayString>
      <DisplayString Condition="m_istrDesc.m_pChz!=nullptr&amp;&amp;m_istrDesc.m_pChz[0]!=0">{{ struct={m_istrDesc.m_pChz,s} cField={m_aryTypemembField.m_c} }}</DisplayString>
  </Type>
  <Type Name="TypeInfoArray">
      <DisplayString>{{ m_aryk={m_aryk} m_pTin={m_pTin} }}</DisplayString>
  </Type>
  <Type Name="TypeInfoEnum">
      <DisplayString Condition="m_enumk == 0">{{ {m_istrName.m_pChz,s}min={m_bintMin} max={m_bintMax}}}}</DisplayString>
      <DisplayString Condition="m_enumk == 1">{{ Flags{m_istrName.m_pChz,s} min={m_bintMin} max={m_bintMax}}}}</DisplayString>
  </Type>
  <Type Name="TypeInfoQualifier">
      <DisplayString>{{ qualk={m_qualk} }}</DisplayString>
  </Type>
  <Type Name="TypeInfoGeneric">
      <DisplayString>{{ name={m_istrName.m_pChz,s} }}</DisplayString>
  </Type>
  <Type Name="TypeInfoLiteral">
  </Type>
  <Type Name="TypeInfo">
     <DisplayString>{{ {m_istrName.m_pChz,s} tink={m_tink} }}</DisplayString>
     <Expand>
       <Item Name="pTinn" Condition="m_tink == 0">(TypeInfoNumeric*)this</Item>
       <Item Name="pTinptr" Condition="m_tink == 2">(TypeInfoPointer*)this</Item>
       <Item Name="pTinproc" Condition="m_tink == 3">(TypeInfoProcedure*)this</Item>
       <Item Name="pTinstruct" Condition="m_tink == 5">(TypeInfoStruct*)this</Item>
       <Item Name="pTinary" Condition="m_tink == 6">(TypeInfoArray*)this</Item>
       <Item Name="pTinenum" Condition="m_tink == 9">(TypeInfoEnum*)this</Item>
       <Item Name="pTinqual" Condition="m_tink == 10">(TypeInfoQualifier*)this</Item>
       <Item Name="pTinlit" Condition="m_tink == 14">(TypeInfoLiteral*)this</Item>
       <Item Name="pTinanc" Condition="m_tink == 15">(TypeInfoAnchor*)this</Item>
       <Item Name="m_tink">m_tink</Item>
       <Item Name="m_istrName">m_istrName</Item>
       <Item Name="m_istrDebug">m_istrDesc</Item>
       <Item Name="m_grftin">m_grftin</Item>
      </Expand>
  </Type>
  <Type Name="Symbol">
      <DisplayString>{{ name={m_istrName.m_pChz,s} m_grfsym={m_grfsym}}}</DisplayString>
  </Type>
  <Type Name="SymbolPath">
      <DisplayString>{{ pSymTail={m_arypSym.m_a[m_arypSym.m_c]->m_istrName} }}</DisplayString>
  </Type>
  <Type Name="SymbolBase">
     <DisplayString>{{ m_symk={m_symk} }}</DisplayString>
     <Expand>
       <Item Name="pSym" Condition="m_symk == 0">(Symbol*)this</Item>
       <Item Name="pSympath" Condition="m_symk == 1">(SymbolPath*)this</Item>
      </Expand>
  </Type>
  <Type Name="STProc">
      <DisplayString>{{ pTinproc={m_pTinproc} }}</DisplayString>
  </Type>
  <Type Name="STFor">
  </Type>
  <Type Name="STDecl">
  </Type>
  <Type Name="STEnum">
      <DisplayString>{{ cConstant={m_cConstantExplicit} }}</DisplayString>
  </Type>
  <Type Name="STStruct">
  </Type>
  <Type Name="STStruct">
  </Type>
  <Type Name="STValue">
    <DisplayString Condition="m_stvalk==0">{{ m_g={m_g} }}</DisplayString>
    <DisplayString Condition="m_stvalk==1">{{ m_nSigned={m_nSigned} }}</DisplayString>
    <DisplayString Condition="m_stvalk==2">{{ m_nUnsigned={m_nUnsigned} }}</DisplayString>
    <DisplayString Condition="m_stvalk==4">{{ bool={m_nUnsigned} }}</DisplayString>
    <DisplayString Condition="m_stvalk==5">{{ m_istrValue={m_istrValue.m_pChz,s} }}</DisplayString>
    </Type>
  <Type Name="STOperator">
  </Type>
  <Type Name="STNode">
      <DisplayString Condition="m_pSymbase!=nullptr&amp;&amp;m_pSymbase->m_symk==SYMK_Symbol">{{ sym={((Symbol*)m_pSymbase)->m_istrName.m_pChz,s} park={m_park} }}</DisplayString>
     <Expand>
      <Item Name="pStfor" Condition="m_stexk == 1">(STFor*)this</Item>
      <Item Name="pStdecl" Condition="m_stexk == 2">(STDecl*)this</Item>
      <Item Name="pStenum" Condition="m_stexk == 3">(STEnum*)this</Item>
      <Item Name="pStstruct" Condition="m_stexk == 4">(STStruct*)this</Item>
      <Item Name="pStproc" Condition="m_stexk == 5">(STProc*)this</Item>
      <Item Name="pStval" Condition="m_stexk == 6">(STValue*)this</Item>
      <Item Name="pStop" Condition="m_stexk == 7">(STValue*)this</Item>
     </Expand>
  </Type>

<Type Name="Anchor">
  <DisplayString Condition="m_pStnodBaked!=nullptr">{{ m_pStnodBaked={m_pStnodBaked} }}</DisplayString>
  <DisplayString Condition="m_pTin!=nullptr">{{ m_pTin={m_pTin} }}</DisplayString>
  <DisplayString Condition="m_pTin==nullptr &amp;&amp; m_pStnodBaked==nullptr">{{ null anchor {m_genk}}}</DisplayString>
</Type>

<Type Name="GenericMap">
  <DisplayString>{{ {m_istrName.m_pChz,s} count={m_mpStrAnc.m_cUsed} }}</DisplayString>
</Type>

<Type Name="Moe::CAry&lt;*&gt;">
  <DisplayString>{{m_c = {m_c}}}</DisplayString>
  <Expand>
    <Item Name="[size]">m_c</Item>
    <Item Name="[capacity]">m_cMax</Item>
    <ArrayItems>
      <Size>m_c</Size>
      <ValuePointer>m_a</ValuePointer>
    </ArrayItems>
  </Expand>
</Type>

<Type Name="Moe::CHash&lt;*,*,*&gt;::SEntry">
    <DisplayString>{{m_key={m_key} m_value={m_value}}}</DisplayString>
</Type>


<Type Name="Moe::CHash&lt;*,*,*&gt;">
    <DisplayString>{{m_cUsed = {m_cUsed}}}</DisplayString>
    <Expand>
      <CustomListItems MaxItemsPerView="5000" ExcludeView="Test">
        <Variable Name="pEntry" InitialValue="m_aEntry" />
        <Size>m_cUsed</Size>
        <Loop>
          <If Condition="pEntry->m_hv != 0xFFFFFFFF &amp;&amp; pEntry->m_hv != 0xFFFFFFFE">
            <Item>*pEntry</Item>
          </If>
          <Exec>++pEntry</Exec> 
        </Loop>
      </CustomListItems>
    </Expand>
</Type>

</AutoVisualizer>